{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohdf\\\\Downloads\\\\auth-guardian\\\\authguardian-frontend\\\\src\\\\components\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\n// src/components/ResetPassword.jsx\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [otp, setOtp] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const {\n    state\n  } = useLocation();\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await api.post('/reset-password', {\n        email: state.email,\n        otp,\n        newPassword\n      });\n      alert('✅ Password reset!');\n      navigate('/login');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      alert(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || '❌ Failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      maxWidth: 400,\n      margin: '50px auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: otp,\n      onChange: e => setOtp(e.target.value),\n      placeholder: \"OTP\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 97\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 103\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: newPassword,\n      onChange: e => setNewPassword(e.target.value),\n      placeholder: \"New Password\",\n      type: \"password\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 138\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 144\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"DyqPVApTxAkq6pH1qoyTMVCh1/c=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","api","jsxDEV","_jsxDEV","ResetPassword","_s","otp","setOtp","newPassword","setNewPassword","state","navigate","handleSubmit","e","preventDefault","post","email","alert","err","_err$response","_err$response$data","response","data","message","onSubmit","style","maxWidth","margin","children","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["C:/Users/mohdf/Downloads/auth-guardian/authguardian-frontend/src/components/ResetPassword.js"],"sourcesContent":["\r\n// src/components/ResetPassword.jsx\r\nimport React, { useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport api from '../services/api';\r\n\r\nconst ResetPassword = () => {\r\n  const [otp, setOtp] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const { state } = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await api.post('/reset-password', { email: state.email, otp, newPassword });\r\n      alert('✅ Password reset!');\r\n      navigate('/login');\r\n    } catch (err) {\r\n      alert(err.response?.data?.message || '❌ Failed');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} style={{ maxWidth: 400, margin: '50px auto' }}>\r\n      <input value={otp} onChange={(e) => setOtp(e.target.value)} placeholder=\"OTP\" required /> <br /><br />\r\n      <input value={newPassword} onChange={(e) => setNewPassword(e.target.value)} placeholder=\"New Password\" type=\"password\" required /> <br /><br />\r\n      <button type=\"submit\">Reset Password</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}